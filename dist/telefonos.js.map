{"version":3,"sources":["codigoArea.js","telefono.module.js","telefonoFilter.js"],"names":[],"mappingsfile":"telefonos.js","sourcesContent":["(function() {\r\n\r\n  'use strict';\r\n angular\r\n .module('telefonoFilter',[])\r\n .constant('codigos',[11,220,221,223,230,236,237,249,260,261,263,264,266,280,291,294,297,298,299,336,341,342,343,345,348,351,353,358,362,364,370,376,379,380,381,383,385,387,388,2202,2221,2223,2224,2225,2226,2227,2229,2241,2242,2243,2244,2245,2246,2252,2254,2255,2257,2261,2262,2264,2265,2266,2267,2268,2271,2272,2273,2274,2281,2283,2284,2285,2286,2291,2292,2296,2297,2302,2314,2316,2317,2320,2323,2324,2325,2326,2331,2333,2334,2335,2336,2337,2338,2342,2343,2344,2345,2346,2352,2353,2354,2355,2356,2357,2358,2392,2393,2394,2395,2396,2473,2474,2475,2477,2478,2622,2624,2625,2626,2646,2647,2648,2651,2652,2655,2656,2657,2658,2901,2902,2903,2920,2921,2922,2923,2924,2925,2926,2927,2928,2929,2931,2932,2933,2934,2935,2936,2940,2942,2945,2946,2948,2952,2953,2954,2962,2963,2964,2966,2972,2982,2983,3327,3329,3382,3385,3387,3388,3400,3401,3402,3404,3405,3406,3407,3408,3409,3435,3436,3437,3438,3442,3444,3445,3446,3447,3454,3455,3456,3458,3460,3462,3463,3464,3465,3466,3467,3468,3469,3471,3472,3476,3482,3483,3487,3489,3491,3492,3493,3496,3497,3498,3521,3522,3524,3525,3532,3533,3537,3541,3542,3543,3544,3546,3547,3548,3549,3562,3563,3564,3571,3572,3573,3574,3575,3576,3582,3583,3584,3585,3711,3715,3716,3718,3721,3725,3731,3734,3735,3741,3743,3751,3754,3755,3756,3757,3758,3772,3773,3774,3775,3777,3781,3782,3786,3821,3825,3826,3827,3832,3835,3837,3838,3841,3843,3844,3845,3846,3854,3855,3856,3857,3858,3861,3862,3863,3865,3867,3868,3869,3873,3876,3877,3878,3885,3886,3887,3888,3891,3892,3894]);\r\n})();","(function() {\r\n\r\n    'use strict';\r\n\r\n    angular.module('telefono',\r\n    \t[ 'telefonoFilter'\r\n    \t]);\r\n})();","(function() {\r\n\r\n    'use strict';\r\n\t\r\n\tangular\r\n\t\t.module('telefonoFilter')\r\n\t\t.filter('tel',function(codigos,$filter){\r\n      \r\n  \t\t\treturn function (number) {\r\n\t\t    /* Muestra el formato del numero de telefono.\r\n\t\t      Caso con 549\r\n\t\t      Caso con 0 en caracteristica\r\n\t\t      Caso Celular con caracteristica\r\n\t\t      Caso Comun con Sin caracteristica\r\n\t\t      Caso Celular con Sin caracteristica\r\n\r\n\t\t      @param number\r\n\t\t    */\r\n\t\t    //  $inject =['codigos'];\r\n\t\t      \r\n\t        if (!number) { return ''; }\r\n\r\n\t        number = String(number);\r\n    \r\n\t        // Si el numero de telefono no es mas largo que numero con area, sin area o celular devuelve el numero\r\n\t        var formattedNumber = number;\r\n\t        var encontro=false;\r\n\r\n          //Quita el 549, si existe y lo guarda si corresponde\r\n          var int = number.substring(0,3) == '549' ? number.substring(0,3) : \"\";\r\n          number = number.substring(0,3) == '549' ? number.slice(3) : number;\r\n          //Quita el 0, si existe y lo guarda si corresponde\r\n      \t\tvar c = (number[0] === '0' )? number[0] : \"\";\r\n      \t\tnumber = number[0] === '0' ? number.slice(1) : number;\r\n    \t\t  \r\n    \t\t\t//Busca los cuatro ultimos numero\r\n    \t\t\tvar total = number.length;\r\n    \t\t\tvar endInicio = total - 4;\r\n    \t\t\tvar end= number.substring(endInicio,total);\r\n    \t\t\t//Si el numero es de 10 o 12 caracteres, tiene caracteristica y no comienza con 15    \t\t\t\r\n    \t\t  if (total>9 && total<13 || (total==10 && numbernumber.substring(0,1)!='15')){\t\r\n    \t\t    var mobile = (number.length>10)? true: false;\r\n      \t\t\tvar area = getArea(number);\r\n      \t\t\tvar front =getFront(number,area,mobile,endInicio);\r\n      \t\t\tif (front!==''){\r\n      \t\t  \tformattedNumber =  int+\" (\"+c+area+\") \"+front+\"-\"+end;\r\n      \t\t  \tencontro=true;\r\n      \t\t\t}\r\n    \t\t  }\r\n    \t\t  //Si el numero es de entre 6 y 10 caracteres o (10 con 15).Numero SIN CARACTERISTICA\r\n    \t\t  if (total>5 && (total<11) || (total==10 && number.substring(0,1)=='15')&& !encontro){\r\n    \t\t    var mobile=(number.substring(0,2)=='15')?true :false;\r\n    \t\t    var front = getFront(number,null,mobile,endInicio);\r\n    \t\t    if (front!==''){\r\n    \t\t      formattedNumber=   front+\"-\"+end;\r\n    \t\t    }\r\n    \t\t  }\r\n    \t\t\treturn formattedNumber;\r\n    \t    };\r\n    \t    \r\n    \t    /** Identifica la parte primera del numero y la presecia del 15 si es un numero celular\r\n    \t     * @method getFront\r\n    \t     * @param string number\r\n    \t     * @param string area\r\n    \t     * @param boolean mobile\r\n    \t     * @param endInicio\r\n    \t     */\r\n    \t    function getFront(number,area,mobile,endInicio){\r\n    \t      var front_=(area!=null)?number.substring(area.length,endInicio):number.substring(0,endInicio);\r\n            if (mobile){\r\n    \t        if (front_.substring(0,2)=='15'){\r\n    \t          return front_.substring(0,2)+\" \"+front_.substring(2,front_.length);\r\n    \t        }else{\r\n    \t          if (front_.length<5){\r\n    \t            return front_;\r\n    \t          }\r\n    \t        }\r\n    \t      }else{\r\n    \t        //console.log(front_);\r\n    \t        if (front_.length<5){\r\n    \t          return front_;\r\n    \t        }\r\n    \t      }\r\n    \t      return \"\";  \r\n    \t    }\r\n    \t    \r\n    \t    /**\r\n    \t     * Decodifica el area del telefono en base a sus caracteres. \r\n    \t     * Utiliza los valores officiales de las caracteristicas, guardadas en\r\n    \t     * @method getArea\r\n    \t     * @param string number\r\n    \t    */\r\n    \t    function getArea(number){\r\n    \t      if (number.substring(0,2)=='11'){\r\n    \t     \r\n    \t        return number.substring(0,2);\r\n    \t      }\r\n    \t      var valor = parseInt(number.substring(0,4));\r\n    \t      var aux= $filter('filter')(codigos,valor,true); \r\n    \t      if (aux.length>0){\r\n    \t        return number.substring(0,4);\r\n    \t      }\r\n    \t       valor = parseInt(number.substring(0,3));\r\n    \t       aux= $filter('filter')(codigos,valor,true); \r\n    \t      if (aux.length>0){\r\n    \t        return number.substring(0,3);\r\n    \t      }\r\n    \t      return \"\";\r\n    \t    }\r\n\t     });\r\n})();"],"sourceRoot":"/source/"}